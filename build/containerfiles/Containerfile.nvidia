FROM nvcr.io/nvidia/cuda:12.8.0-runtime-ubi9

LABEL maintainer="gpillon" \
      name="comfyui-nvidia" \
      summary="ComfyUI nvidia image for AI image generation" \
      description="ComfyUI with NVIDIA CUDA support" \
      io.k8s.display-name="ComfyUI nvidia image" \
      io.k8s.description="ComfyUI with NVIDIA CUDA support" \
      authoritative-source-url="https://github.com/comfyanonymous/ComfyUI.git" \
      io.openshift.build.commit.ref="master" \
      io.openshift.build.source-location="https://github.com/comfyanonymous/ComfyUI.git" \
      io.openshift.build.image="ghcr.io/gpillon/comfyui-nvidia:v1.0.0"

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    DEBIAN_FRONTEND=noninteractive \
    HOME=/opt/app-root/src \
    PORT=8080 \
    COMFYUI_PATH=/opt/app-root/ComfyUI

# Set working directory
WORKDIR /opt/app-root/src

# Install OS packages - RHEL 9 uses dnf instead of apt-get
USER root
RUN dnf update -y && \
    dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm && \
    dnf install -y --nogpgcheck https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-$(rpm -E %rhel).noarch.rpm && \
    dnf install -y --nogpgcheck https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-$(rpm -E %rhel).noarch.rpm && \
    dnf install -y --allowerasing \
gcc \gcc-c++ \make \curl \git \mesa-libGL \glib2 \libSM \libXext \python3-devel \wget && \
    dnf clean all

# Copy scripts
COPY scripts/ /opt/app-root/scripts/
RUN chmod +x /opt/app-root/scripts/*.sh && \
    chown -R 1001:0 /opt/app-root/src

# Switch to non-root user for remaining operations
USER 1001

# Clone ComfyUI repository
RUN git clone https://github.com/comfyanonymous/ComfyUI.git /opt/app-root/src/ComfyUI
USER root
RUN mv /opt/app-root/src/ComfyUI /opt/app-root/ComfyUI && \
    chown -R 1001:0 /opt/app-root/ComfyUI
USER 1001

# Install Python dependencies
RUN pip install --no-cache-dir \
pyaml==25.5.0 \
torch==2.7.1+cu128 \torchvision==0.22.1+cu128 \torchaudio==2.7.1+cu128 \--extra-index-url https://download.pytorch.org/whl/cu128
RUN cd /opt/app-root/ComfyUI && \
    git checkout master && \
    pip install --upgrade pip && \
    pip install --upgrade setuptools && \
    grep -v "torch\|torchaudio\|torchvision" requirements.txt > requirements_filtered.txt && \
    pip install -r requirements_filtered.txt

# set permissions for ComfyUI
USER root
RUN chown -R 1001:0 /opt/app-root/ComfyUI/custom_nodes
USER 1001

# Create extra_model_paths.yaml to point to the correct directories
RUN echo "comfyui:" > /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  base_path: /opt/app-root/src/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  is_default: true" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  checkpoints: /opt/app-root/src/models/checkpoints/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  clip: /opt/app-root/src/models/clip/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  clip_vision: /opt/app-root/src/models/clip_vision/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  configs: /opt/app-root/src/models/configs/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  controlnet: /opt/app-root/src/models/controlnet/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  diffusion_models: |" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "    /opt/app-root/src/models/diffusion_models" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "    /opt/app-root/src/models/unet" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  embeddings: /opt/app-root/src/models/embeddings/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  loras: /opt/app-root/src/models/loras/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  upscale_models: /opt/app-root/src/models/upscale_models/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  vae: /opt/app-root/src/models/vae/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
    echo "  gligen: /opt/app-root/src/models/gligen/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml

# Fix permissions for OpenShift
USER root
RUN find /opt/app-root/ComfyUI -type d -exec chmod 775 {} \; && \
    find /opt/app-root/ComfyUI -type f -exec chmod 664 {} \; && \
    chmod +x /opt/app-root/ComfyUI/main.py

USER 1001

# Define volumes
VOLUME /opt/app-root/src/models
VOLUME /opt/app-root/ComfyUI/custom_nodes

# Expose port
EXPOSE 8080

# Set entrypoint
ENTRYPOINT ["/opt/app-root/scripts/start-comfyui.sh"]
 