FROM {{ base_image }}

LABEL maintainer="gpillon" \
      name="comfyui-{{ name }}" \
      summary="ComfyUI {{ name }} image for AI image generation" \
      description="{{ description }}" \
      io.k8s.display-name="ComfyUI {{ name }} image" \
      io.k8s.description="{{ description }}" \
      authoritative-source-url="{{ comfyui_repo }}" \
      io.openshift.build.commit.ref="{{ comfyui_version }}" \
      io.openshift.build.source-location="{{ comfyui_repo }}" \
      io.openshift.build.image="ghcr.io/gpillon/comfyui-{{ name }}:{{ tag }}"

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    DEBIAN_FRONTEND=noninteractive \
    HOME=/opt/app-root/src \
    PORT=8188 \
    COMFYUI_PATH=/opt/app-root/ComfyUI \
    CLEANUP_USER_INPUT_OUTPUT=false \
    CLEANUP_MAX_AGE_MINUTES=60 \
    CLEANUP_INTERVAL_SECONDS=900 \
    NB_PREFIX="/notebook/default/default" \
    NGINX_PORT=8888 \
    RUNTIME_FLAGS="" \
    EXTRA_FLAGS="{{ extra_flags|default('') }}" \
    API_MODE="false" \
    ENABLE_S3UPLOADER="true"

# Set working directory
WORKDIR /opt/app-root/src

# Install OS packages - RHEL 9 uses dnf instead of apt-get
USER root
RUN dnf update -y && \
    dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm && \
    dnf install -y --nogpgcheck https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-$(rpm -E %rhel).noarch.rpm && \
    dnf install -y --nogpgcheck https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-$(rpm -E %rhel).noarch.rpm && \
    dnf install -y --allowerasing \
    {% for package in os_packages %}
    {% if package|trim %}{{ package }}{% if not loop.last %} \{% endif %}{% endif %}
    {% endfor %} \
    nginx supervisor fcgiwrap && \
    dnf clean all

# Install NGINX configuration
RUN mkdir -p /opt/app-root/etc/nginx.d /opt/app-root/api/kernels

USER {{ user }}

# Clone ComfyUI repository
RUN git clone {{ comfyui_repo }} /opt/app-root/src/ComfyUI
USER root
RUN mv /opt/app-root/src/ComfyUI /opt/app-root/ComfyUI && \
    chown -R {{ user }}:0 /opt/app-root/ComfyUI
USER {{ user }}

#install Services dependencies
RUN pip install flask flask-cors boto3 websocket-client requests websockets

# Install Python dependencies
{% if custom_packages %}
RUN pip install --no-cache-dir \
    {% for package in python_packages %}
    {% if package|trim %}{{ package }}{% if not loop.last %} \{% endif %}{% endif %}
    {% endfor %} \
    {% for package in custom_packages %}
    {% if package|trim %}{{ package }}{% if not loop.last %} \{% endif %}{% endif %}
    {% endfor %}
{% else %}
RUN pip install --no-cache-dir \
    {% for package in python_packages %}
    {% if package|trim %}{{ package }}{% if not loop.last %} \{% endif %}{% endif %}
    {% endfor %}
{% endif %}

RUN cd /opt/app-root/ComfyUI && \
    git checkout {{ comfyui_version }} && \
    pip install --upgrade pip && \
    pip install --upgrade setuptools && \
    pip install gitpython && \
    grep -v "torch\|torchaudio\|torchvision" requirements.txt > requirements_filtered.txt && \
    pip install -r requirements_filtered.txt

# set permissions for ComfyUI
USER root
RUN chown -R {{ user }}:0 /opt/app-root/ComfyUI/custom_nodes && \
    chmod -R g+rwX /opt/app-root/ComfyUI/custom_nodes
USER {{ user }}

# # Create extra_model_paths.yaml to point to the correct directories
# RUN echo "comfyui:" > /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  is_default: false" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  checkpoints: /mnt/models/models/checkpoints/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  clip: /mnt/models/models/clip/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  clip_vision: /mnt/models/models/clip_vision/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  configs: /mnt/models/models/configs/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  controlnet: /mnt/models/models/controlnet/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  diffusion_models: |" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "    /mnt/models/models/diffusion_models" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "    /mnt/models/models/unet" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  embeddings: /mnt/models/models/embeddings/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  loras: /mnt/models/models/loras/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  upscale_models: /mnt/models/models/upscale_models/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  vae: /mnt/models/models/vae/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml && \
#     echo "  gligen: /mnt/models/models/gligen/" >> /opt/app-root/ComfyUI/extra_model_paths.yaml

# Fix permissions for OpenShift
USER root
RUN find /opt/app-root/ComfyUI -type d -exec chmod 775 {} \; && \
    find /opt/app-root/ComfyUI -type f -exec chmod 664 {} \; && \
    chmod +x /opt/app-root/ComfyUI/main.py

# Copy scripts
COPY scripts/ /opt/app-root/scripts/
COPY nginx/conf.d/ /opt/app-root/etc/nginx/conf.d/
COPY nginx/extra/ /opt/app-root/etc/nginx/extra/
COPY nginx/nginx.conf /opt/app-root/etc/nginx/nginx.conf
COPY nginx/api/ /opt/app-root/api/
COPY nginx/pages/ /opt/app-root/etc/nginx/pages/
COPY supervisord/ /etc/supervisor/conf.d/
COPY services/ /opt/app-root/services/

# Generate and copy ComfyUI extensions configuration
COPY build/extensions/comfyui-extensions.json /opt/app-root/etc/comfyui-extensions.json

RUN chmod +x /opt/app-root/scripts/*.sh && \
    chmod +x /opt/app-root/api/kernels/access.cgi && \
    chown -R {{ user }}:0 /opt/app-root/src && \
    chown -R {{ user }}:0 /opt/app-root/api && \
    mkdir -p /var/log/nginx /var/lib/nginx /var/run && \
    chown -R {{ user }}:0 /var/log/nginx /var/lib/nginx /var/run && \
    chmod -R g+rwX /var/log/nginx /var/lib/nginx /var/run && \
    chmod -R ug+rwX /opt/app-root/etc/nginx/conf.d && \
    chmod -R ug+rwX /opt/app-root/etc/nginx/extra && \
    chown -R {{ user }}:0 /opt/app-root/etc/nginx/conf.d && \
    chown -R {{ user }}:0 /opt/app-root/etc/nginx/extra

# Switch to non-root user for remaining operations
USER {{ user }}

# Define volumes
VOLUME /opt/app-root/src/models
VOLUME /opt/app-root/ComfyUI/custom_nodes

# Expose ports
EXPOSE {{ port }}
EXPOSE 8888

# Set entrypoint
ENTRYPOINT ["/opt/app-root/scripts/start-comfyui-with-nginx.sh"] 
